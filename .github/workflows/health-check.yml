name: CarMemo Health Check & Testing

on:
  schedule:
    - cron: '*/15 * * * *'  # Every 15 minutes
  workflow_dispatch:  # Manual trigger
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  health-check:
    runs-on: ubuntu-latest
    name: Health Check & Testing
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: |
          npm install
          cd backend && npm install
          cd ../frontend && npm install
          
      - name: Setup environment
        run: |
          # Create .env file for backend
          cat > backend/.env << EOF
          PORT=3001
          API_KEY=${{ secrets.GEMINI_API_KEY }}
          API_NINJAS_KEY=${{ secrets.API_NINJAS_KEY }}
          NODE_ENV=test
          EOF
          
      - name: Start backend server
        run: |
          cd backend
          npm run dev &
          sleep 10
          
      - name: Start frontend server
        run: |
          cd frontend
          npm run dev &
          sleep 10
          
      - name: Wait for services to be ready
        run: |
          # Wait for backend
          for i in {1..30}; do
            if curl -f http://localhost:3001/health >/dev/null 2>&1; then
              echo "Backend is ready"
              break
            fi
            echo "Waiting for backend... ($i/30)"
            sleep 2
          done
          
          # Wait for frontend
          for i in {1..30}; do
            if curl -f http://localhost:5173 >/dev/null 2>&1; then
              echo "Frontend is ready"
              break
            fi
            echo "Waiting for frontend... ($i/30)"
            sleep 2
          done
          
      - name: Make test scripts executable
        run: |
          chmod +x tests/health-check.sh
          chmod +x tests/api-test.sh
          chmod +x tests/monitor-dashboard.sh
          
      - name: Run health checks
        run: |
          ./tests/health-check.sh
          
      - name: Run API tests
        run: |
          ./tests/api-test.sh
          
      - name: Run linting checks
        run: |
          cd frontend && npm run lint
          cd ../backend && npm run lint || echo "No lint script in backend"
          
      - name: Run type checking
        run: |
          cd frontend && npm run type-check || echo "No type-check script"
          cd ../backend && npx tsc --noEmit || echo "TypeScript check failed"
          
      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results
          path: |
            health-check-*.log
            api-test-*.log
            monitor-*.log
          retention-days: 7
          
      - name: Send notification on failure
        if: failure()
        uses: 8398a7/action-slack@v3
        with:
          status: failure
          webhook_url: ${{ secrets.SLACK_WEBHOOK_URL }}
          text: "CarMemo health check failed! Check the logs for details."
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

  performance-test:
    runs-on: ubuntu-latest
    name: Performance Testing
    needs: health-check
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: |
          npm install
          cd backend && npm install
          
      - name: Setup environment
        run: |
          cat > backend/.env << EOF
          PORT=3001
          API_KEY=${{ secrets.GEMINI_API_KEY }}
          API_NINJAS_KEY=${{ secrets.API_NINJAS_KEY }}
          NODE_ENV=test
          EOF
          
      - name: Start backend server
        run: |
          cd backend
          npm run dev &
          sleep 10
          
      - name: Run performance tests
        run: |
          # Test response times
          echo "Testing API response times..."
          for i in {1..10}; do
            start_time=$(date +%s.%N)
            response=$(curl -s -X POST http://localhost:3001/api/maintenance-schedule \
              -H "Content-Type: application/json" \
              -d '{"vin": "1HGBH41JXMN109186"}' 2>/dev/null)
            end_time=$(date +%s.%N)
            duration=$(echo "$end_time - $start_time" | bc -l)
            echo "Request $i: ${duration}s"
            
            # Check if response is valid
            if echo "$response" | grep -q "make\|model\|year"; then
              echo "  ✅ Valid response"
            else
              echo "  ❌ Invalid response"
              exit 1
            fi
          done
          
      - name: Upload performance results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: performance-results
          path: performance-test-*.log
          retention-days: 7

  security-check:
    runs-on: ubuntu-latest
    name: Security Check
    needs: health-check
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Run security audit
        run: |
          npm audit --audit-level moderate
          cd backend && npm audit --audit-level moderate
          cd ../frontend && npm audit --audit-level moderate
          
      - name: Check for secrets in code
        run: |
          # Check for hardcoded API keys
          if grep -r "AIzaSy\|api_key\|API_KEY" . --exclude-dir=node_modules --exclude-dir=.git; then
            echo "⚠️  Potential hardcoded secrets found"
            exit 1
          fi
          
      - name: Check file permissions
        run: |
          # Ensure .env files are not committed
          if git ls-files | grep -E "\.env$"; then
            echo "❌ .env files should not be committed"
            exit 1
          fi

  deployment-check:
    runs-on: ubuntu-latest
    name: Deployment Readiness
    needs: [health-check, performance-test, security-check]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: |
          npm install
          cd backend && npm install
          cd ../frontend && npm install
          
      - name: Build frontend
        run: |
          cd frontend
          npm run build
          
      - name: Check build artifacts
        run: |
          if [ ! -d "frontend/dist" ]; then
            echo "❌ Frontend build failed"
            exit 1
          fi
          echo "✅ Frontend build successful"
          
      - name: Test production build
        run: |
          cd frontend
          npm run preview &
          sleep 5
          
          # Test the built application
          if curl -f http://localhost:4173 >/dev/null 2>&1; then
            echo "✅ Production build is working"
          else
            echo "❌ Production build test failed"
            exit 1
          fi
          
      - name: Create deployment summary
        run: |
          echo "## 🚗 CarMemo Deployment Readiness Report" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### ✅ All Checks Passed" >> $GITHUB_STEP_SUMMARY
          echo "- Health checks: ✅" >> $GITHUB_STEP_SUMMARY
          echo "- API tests: ✅" >> $GITHUB_STEP_SUMMARY
          echo "- Performance tests: ✅" >> $GITHUB_STEP_SUMMARY
          echo "- Security audit: ✅" >> $GITHUB_STEP_SUMMARY
          echo "- Build test: ✅" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Status: Ready for deployment** 🚀" >> $GITHUB_STEP_SUMMARY 